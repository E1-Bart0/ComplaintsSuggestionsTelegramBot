from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Message, Update
from telegram.ext import CallbackContext


def start(update: Update, context: CallbackContext) -> None:
    """Send a message when the command /start is issued."""
    update.message.reply_text(
        """
        –ü—Ä–∏–≤–µ—Ç!
    –° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å.
        –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ, –∞ —è –ø–µ—Ä–µ–¥–∞–º —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏ –≤ –æ–±—â—É—é –≥—Ä—É–ø–ø—É
    https://t.me/joinchat/dOZ_hWPNPy8wN2U6
    """
    )


def help_command(update: Update, context: CallbackContext) -> None:
    """Send a message when the command /help is issued."""
    update.message.reply_text("HELP")


def echo(update: Update, context: CallbackContext) -> None:
    """User decides how to send his message to group: as suggestion or as complaints"""
    keyboard = [
        [
            InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", callback_data="suggestion"),
            InlineKeyboardButton("–ñ–∞–ª–æ–±–∞", callback_data="complaint"),
        ],
        [
            InlineKeyboardButton("–ê–Ω–æ–Ω–∏–º–Ω–æ–µ\n–°–æ–æ–±—â–µ–Ω–∏–µ", callback_data="anonymous message"),
            InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="stop"),
        ],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    message_id = update.message.message_id
    update.message.reply_text(text="–ü–µ—Ä–µ–¥–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫:", reply_markup=reply_markup, reply_to_message_id=message_id)


def parse_callback(update: Update, context: CallbackContext) -> None:
    """Parses the CallbackQuery and updates the message text."""
    query = update.callback_query
    query.answer()

    if query.data == "suggestion":
        text = '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"'
        header = "üòç –ù–û–í–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï üòç"
        reply_msg_to_group(update, query.message.reply_to_message, header)
    elif query.data == "complaint":
        text = '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ "–ñ–∞–ª–æ–±–∞"'
        header = "ü§¨ –ù–û–í–ê–Ø –ñ–ê–õ–û–ë–ê ü§¨"
        reply_msg_to_group(update, query.message.reply_to_message, header)
    elif query.data == "anonymous message":
        text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É –∞–Ω–æ–Ω–∏–º–Ω–æ"
        header = "üòé –ù–û–í–û–ï –ê–ù–û–ù–ò–ú–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï üòé"
        reply_msg_to_group(update, query.message.reply_to_message, header)
    else:
        text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É"
    query.edit_message_text(text=text)


def reply_msg_to_group(update: Update, message: Message, header):
    """Sending message to Group as a suggestion"""
    from bot.main import CHAT_ID

    message.chat.id = CHAT_ID
    update.message = message
    update.message.reply_markdown(f"**{header}**\n\n{message.text}")
